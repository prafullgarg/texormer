{"version":3,"sources":["navbar.js","text-form.js","About.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","htmlFor","style","width","color","role","aria-checked","onClick","toggleMode","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","head","value","onChange","event","target","cols","rows","backgroundColor","newtext","toUpperCase","showAlert","toLowerCase","newt","split","join","copy","document","getElementById","navigator","clipboard","writeText","length","About","modebtn","setModeBtn","_useState3","_useState4","setMode","aria-labelledby","data-bs-parent","defaultProps","Alert","alert","word","low","charAt","slice","capitalize","msg","App","setAlert","message","setTimeout","body","src_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4a514ba8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./navbar.css\";\r\n// import { a } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      {/* {`this syntax is used to define templet ${variable name} litrals`} */}\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" aria-current=\"page\" href=\"/about\">\r\n                  {props.about}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"Themes\">\r\n          <label\r\n            htmlFor=\"theme\"\r\n            style={{\r\n              width: \"9em\",\r\n              color: props.mode === \"light\" ? \"black\" : \"white\",\r\n            }}\r\n          >\r\n            Color Themes\r\n          </label>\r\n          <button type=\"button\" className=\"theme\" id=\"col1\"></button>\r\n          <button type=\"button\" className=\"theme\" id=\"col2\"></button>\r\n          <button type=\"button\" className=\"theme\" id=\"col3\"></button>\r\n        </div>\r\n        <div\r\n          className={`form-check form-switch text-${\r\n            props.mode === \"light\" ? \"dark\" : \"light\"\r\n          }`}\r\n        >\r\n          <input\r\n            className=\"form-check-input mx-2\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            id=\"flexSwitchCheckDefault\"\r\n            aria-checked\r\n            onClick={props.toggleMode}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n            {`Enable ${props.mode === \"light\" ? \"dark\" : \"light\"} Mode`}\r\n          </label>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string, about: PropTypes.string };\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    // console.log(\"text is changing\")\r\n    setText(event.target.value);\r\n  };\r\n  const upper = () => {\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    // console.log(\"Changed to uppercase\" +text)\r\n    props.showAlert(\"Text converted to Upper-case\",\"success\")\r\n  };\r\n  const lower = () => {\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Text converted to lower-case\",\"success\")\r\n\r\n  };\r\n  const clear = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Text removed\",\"success\")\r\n\r\n  };\r\n  const handleExtraSpace = () => {\r\n    let newt = text.split(/[ ]+/);\r\n    setText(newt.join(\" \"));\r\n    props.showAlert(\"Extra spaces removed from the text\",\"success\")\r\n\r\n  };\r\n  const handleCopy = () => {\r\n    var copy = document.getElementById(\"myBox\");\r\n    navigator.clipboard.writeText(copy.value);\r\n    props.showAlert(\"Text is copied to the clipboard\",\"success\")\r\n\r\n  };\r\n  //   const handlePast=()=>{\r\n  //     let x=navigator.clipboard.readText\r\n  //     setText(x)\r\n  //   }\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n      >\r\n        <h1>{props.head}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            value={text}\r\n            onChange={handleChange}\r\n            cols=\"100\"\r\n            rows=\"10\"\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"grey\",\r\n              color: props.mode === \"light\" ? \"black\" : \"white\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-primary mx-1\"\r\n          onClick={upper}\r\n          style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n        >\r\n          Uppercase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-1\"\r\n          onClick={lower}\r\n          style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n        >\r\n          Lowercase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-1\"\r\n          onClick={clear}\r\n          style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n        >\r\n          Clear Text\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-1\"\r\n          onClick={handleExtraSpace}\r\n          style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n        >\r\n          Remove extra space\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-1\"\r\n          onClick={handleCopy}\r\n          style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        {/* <button className=\"btn btn-primary mx-1\" onClick={handlePast}> Past Text</button> */}\r\n        <hr />\r\n      </div>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n      >\r\n        <h1>Text Description</h1>\r\n        <p>\r\n          <strong>\r\n            Number of words: {text.split(\" \").length - 1} | Number of\r\n            charachters: {text.length}\r\n          </strong>\r\n        </p>\r\n        <hr />\r\n        <h6>\r\n          Time required to read: {text.split(\" \").length * 0.811 - 0.811}{\" \"}\r\n          minutes\r\n        </h6>\r\n        <hr />\r\n        <h3>Preview</h3>\r\n        <h6>\r\n          <p>{text.length > 0 ? text : \"Enter somthing to preview it here\"}</p>\r\n        </h6>\r\n        <hr />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nTextForm.defaultProps = {\r\n  head: \"Enter the text below\",\r\n};\r\nTextForm.propTypes = {\r\n  head: PropTypes.string,\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n  const [modebtn, setModeBtn] = useState(\"Enable Dark Mode\");\r\n  const [mode, setMode] = useState({\r\n    color: \"black\",\r\n    backgroundColor: \"white\",\r\n  });\r\n\r\n  const changeMode = () => {\r\n    if (mode.color === \"white\") {\r\n      setMode({\r\n        color: \"black\",\r\n        backgroundColor: \"white\",\r\n      });\r\n      setModeBtn(\"Enable dark mode\");\r\n    } else {\r\n      setMode({\r\n        color: \"white\",\r\n        backgroundColor: \"black\",\r\n      });\r\n      setModeBtn(\"Enable light mode\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\" style={mode}>\r\n      <h2>About Texomer</h2>\r\n      <p>\r\n        This is an web application which provides functionalities to transform\r\n        text and return text related information.{\" \"}\r\n      </p>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={mode}>\r\n        <div className=\"accordion-item\" style={mode}>\r\n          <h2 className=\"accordion-header\" id=\"headingOne\" style={mode}>\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={mode}\r\n            >\r\n              Upper\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n            style={mode}\r\n          >\r\n            <div className=\"accordion-body\" style={mode}>\r\n              Upper button converts text to upper-case.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={mode}>\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={mode}\r\n            >\r\n              Lower\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n            style={mode}\r\n          >\r\n            <div className=\"accordion-body\" style={mode}>\r\n              Lower button converts text to lower-case.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={mode}>\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={mode}\r\n            >\r\n              Clear\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n            style={mode}\r\n          >\r\n            <div className=\"accordion-body\" style={mode}>\r\n              Clear button removes the written text.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\" style={mode}>\r\n        <button className=\"btn btn-primary my-3\" onClick={changeMode}>\r\n          {modebtn}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        let low=word.toLowerCase()\r\n        return low.charAt(0).toUpperCase() +low.slice(1);  \r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> :{props.alert.msg}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport Navbar from \"./navbar\";\nimport TextForm from \"./text-form\";\nimport About from \"./About.js\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Alert.js\";\n// import { BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const [mode, setMode] = useState(\"light\"); // it states whether mode is light mode or dark mode\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#0b3054\";\n      showAlert(\"Dark mode enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      <Navbar\n        title=\"Texormer\"\n        about=\"About\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm id=\"text-form\" mode={mode} showAlert={showAlert} />\n        <About/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}