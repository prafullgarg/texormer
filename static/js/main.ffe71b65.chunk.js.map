{"version":3,"sources":["navbar.js","text-form.js","About.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","role","aria-checked","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","head","value","onChange","event","target","cols","rows","backgroundColor","newtext","toUpperCase","showAlert","disabled","length","toLowerCase","newt","split","join","copy","document","getElementById","navigator","clipboard","writeText","filter","element","About","aria-labelledby","data-bs-parent","defaultProps","Alert","height","alert","word","low","charAt","slice","capitalize","msg","App","setAlert","message","setTimeout","_useState3","_useState4","setMode","body","src_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"8NAIe,SAASA,EAAOC,GAC7B,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAEEH,EAAAC,EAAAC,cAAA,OACEE,UAAS,kCAAAC,OAAoCN,EAAMO,KAA1C,QAAAD,OAAqDN,EAAMO,OAEpEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAeG,KAAK,KAC9BR,EAAMS,OAETR,EAAAC,EAAAC,cAAA,UACEE,UAAU,iBACVK,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,sBAEbd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BAA2BW,GAAG,0BAC3Cf,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mCACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAkBG,KAAK,KAApC,SAIFP,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAWY,eAAa,OAAOT,KAAK,UAC9CR,EAAMkB,SAkBbjB,EAAAC,EAAAC,cAAA,OACFE,UAAS,+BAAAC,OACQ,UAAfN,EAAMO,KAAmB,OAAS,UAGpCN,EAAAC,EAAAC,cAAA,SACEE,UAAU,oBACVK,KAAK,WACLS,KAAK,SACLH,GAAG,yBACHI,gBAAA,EACAC,QAASrB,EAAMsB,aAEjBrB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,mBAAmBkB,QAAQ,0BAA5C,UAAAjB,OAC4B,UAAfN,EAAMO,KAAmB,OAAS,QAD/C,eC7DK,SAASiB,EAASxB,GAAO,IAAAyB,EACdC,mBAAS,IADKC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC/BK,EAD+BH,EAAA,GACzBI,EADyBJ,EAAA,GAwCtC,OACE1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OACEE,UAAU,YACV2B,MAAO,CAAEC,MAAsB,UAAfjC,EAAMO,KAAmB,QAAU,UAEnDN,EAAAC,EAAAC,cAAA,UAAKH,EAAMkC,MACXjC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,YACEE,UAAU,eACVW,GAAG,QACHmB,MAAOL,EACPM,SAjDW,SAACC,GAEpBN,EAAQM,EAAMC,OAAOH,QAgDbI,KAAK,MACLC,KAAK,KACLR,MAAO,CACLS,gBAAgC,UAAfzC,EAAMO,KAAmB,QAAU,WACpD0B,MAAsB,UAAfjC,EAAMO,KAAmB,QAAU,YAIhDN,EAAAC,EAAAC,cAAA,UACEE,UAAU,4BACVgB,QAxDM,WACZ,IAAIqB,EAAUZ,EAAKa,cACnBZ,EAAQW,GAER1C,EAAM4C,UAAU,+BAA+B,YAqDzCZ,MAAO,CAAEC,MAAsB,UAAfjC,EAAMO,KAAmB,QAAU,SACnDsC,SAAwB,IAAdf,EAAKgB,QAJjB,aAQA7C,EAAAC,EAAAC,cAAA,UACEE,UAAU,4BACVgB,QA1DM,WACZ,IAAIqB,EAAUZ,EAAKiB,cACnBhB,EAAQW,GACR1C,EAAM4C,UAAU,+BAA+B,YAwDzCZ,MAAO,CAAEC,MAAsB,UAAfjC,EAAMO,KAAmB,QAAU,SACnDsC,SAAwB,IAAdf,EAAKgB,QAJjB,aAQA7C,EAAAC,EAAAC,cAAA,UACEE,UAAU,4BACVgB,QA5DM,WACZU,EAAQ,IACR/B,EAAM4C,UAAU,eAAe,YA2DzBZ,MAAO,CAAEC,MAAsB,UAAfjC,EAAMO,KAAmB,QAAU,SACnDsC,SAAwB,IAAdf,EAAKgB,QAJjB,cASA7C,EAAAC,EAAAC,cAAA,UACEE,UAAU,4BACVgB,QAhEiB,WACvB,IAAI2B,EAAOlB,EAAKmB,MAAM,QACtBlB,EAAQiB,EAAKE,KAAK,MAClBlD,EAAM4C,UAAU,qCAAqC,YA8D/CZ,MAAO,CAAEC,MAAsB,UAAfjC,EAAMO,KAAmB,QAAU,SACnDsC,SAAwB,IAAdf,EAAKgB,QAJjB,sBASA7C,EAAAC,EAAAC,cAAA,UACEE,UAAU,4BACVgB,QAnEW,WACjB,IAAI8B,EAAOC,SAASC,eAAe,SACnCC,UAAUC,UAAUC,UAAUL,EAAKhB,OACnCnC,EAAM4C,UAAU,kCAAkC,YAiE5CZ,MAAO,CAAEC,MAAsB,UAAfjC,EAAMO,KAAmB,QAAU,SACnDsC,SAAwB,IAAdf,EAAKgB,QAJjB,aAUA7C,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,OACEE,UAAU,YACV2B,MAAO,CAAEC,MAAsB,UAAfjC,EAAMO,KAAmB,QAAU,UAEnDN,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,kCACoB2B,EAAKmB,MAAM,KAAKQ,OAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQZ,SAAaA,OADnF,6BAEgBhB,EAAKgB,SAGvB7C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,oCACkG,KAAxE2B,EAAKmB,MAAM,KAAKQ,OAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQZ,SAAaA,OAAgB,IADzG,WAIA7C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SAAI2B,EAAKgB,OAAS,EAAIhB,EAAO,sCAE/B7B,EAAAC,EAAAC,cAAA,aCjIO,SAASwD,EAAM3D,GAC5B,IAAMO,EAAO,CACX0B,MAAsB,UAAfjC,EAAMO,KAAmB,QAAU,QAC1CkC,gBAAgC,UAAfzC,EAAMO,KAAmB,QAAU,WAEtD,OACEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAY2B,MAAOzB,GAChCN,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,6HAIAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYW,GAAG,mBAAmBgB,MAAOzB,GACtDN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiB2B,MAAOzB,GACrCN,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAAmBW,GAAG,aAAagB,MAAOzB,GACtDN,EAAAC,EAAAC,cAAA,UACEE,UAAU,mBACVK,KAAK,SACLC,iBAAe,WACfC,iBAAe,eACfE,gBAAc,OACdD,gBAAc,cACdmB,MAAOzB,GAPT,UAYFN,EAAAC,EAAAC,cAAA,OACEa,GAAG,cACHX,UAAU,mCACVuD,kBAAgB,aAChBC,iBAAe,oBACf7B,MAAOzB,GAEPN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiB2B,MAAOzB,GAAvC,+CAKJN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiB2B,MAAOzB,GACrCN,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAAmBW,GAAG,cAClCf,EAAAC,EAAAC,cAAA,UACEE,UAAU,6BACVK,KAAK,SACLC,iBAAe,WACfC,iBAAe,eACfE,gBAAc,QACdD,gBAAc,cACdmB,MAAOzB,GAPT,UAYFN,EAAAC,EAAAC,cAAA,OACEa,GAAG,cACHX,UAAU,8BACVuD,kBAAgB,aAChBC,iBAAe,oBACf7B,MAAOzB,GAEPN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiB2B,MAAOzB,GAAvC,+CAKJN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiB2B,MAAOzB,GACrCN,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAAmBW,GAAG,gBAClCf,EAAAC,EAAAC,cAAA,UACEE,UAAU,6BACVK,KAAK,SACLC,iBAAe,WACfC,iBAAe,iBACfE,gBAAc,QACdD,gBAAc,gBACdmB,MAAOzB,GAPT,UAYFN,EAAAC,EAAAC,cAAA,OACEa,GAAG,gBACHX,UAAU,8BACVuD,kBAAgB,eAChBC,iBAAe,oBACf7B,MAAOzB,GAEPN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiB2B,MAAOzB,GAAvC,8CDiDZiB,EAASsC,aAAe,CACtB5B,KAAM,wBErHO6B,MAnBf,SAAe/D,GAKb,OACEC,EAAAC,EAAAC,cAAA,OAAK6B,MAAO,CAAEgC,OAAQ,SACnBhE,EAAMiE,OACLhE,EAAAC,EAAAC,cAAA,OACEE,UAAS,eAAAC,OAAiBN,EAAMiE,MAAMvD,KAA7B,gCACTS,KAAK,SAELlB,EAAAC,EAAAC,cAAA,cAXW,SAAC+D,GAClB,IAAIC,EAAMD,EAAKnB,cACf,OAAOoB,EAAIC,OAAO,GAAGzB,cAAgBwB,EAAIE,MAAM,GAShCC,CAAWtE,EAAMiE,MAAMvD,OAJlC,KAIoDV,EAAMiE,MAAMM,OCoCzDC,MA1Cf,WAAe,IAAA/C,EACaC,mBAAS,MADtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNwC,EADMtC,EAAA,GACC8C,EADD9C,EAAA,GAEPiB,EAAY,SAAC8B,EAAShE,GAC1B+D,EAAS,CACPF,IAAKG,EACLhE,KAAMA,IAERiE,WAAW,WACTF,EAAS,OACR,MATQG,EAYWlD,mBAAS,SAZpBmD,EAAAjD,OAAAC,EAAA,EAAAD,CAAAgD,EAAA,GAYNrE,EAZMsE,EAAA,GAYAC,EAZAD,EAAA,GAyBb,OACE5E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACJ,EAAD,CACEU,MAAM,WACNS,MAAM,QACNX,KAAMA,EACNe,WAlBa,WACJ,UAATf,GACFuE,EAAQ,QACR1B,SAAS2B,KAAK/C,MAAMS,gBAAkB,UACtCG,EAAU,oBAAqB,aAE/BkC,EAAQ,SACR1B,SAAS2B,KAAK/C,MAAMS,gBAAkB,QACtCG,EAAU,qBAAsB,eAYhC3C,EAAAC,EAAAC,cAAC6E,EAAD,CAAOf,MAAOA,IACdhE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAACqB,EAAD,CAAUR,GAAG,YAAYT,KAAMA,EAAMqC,UAAWA,IAChD3C,EAAAC,EAAAC,cAACwD,EAAD,CAAOpD,KAAMA,OChCN0E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAW3C,SAASC,eAAe,SACpD2C,OACH/F,EAAAC,EAAAC,cAACF,EAAAC,EAAM+F,WAAP,KACEhG,EAAAC,EAAAC,cAAC+F,EAAD,QAOJjB","file":"static/js/main.ffe71b65.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./navbar.css\";\r\n// import { a } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      {/* {`this syntax is used to define templet ${variable name} litrals`} */}\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          ></button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" aria-current=\"page\" href=\"/about\">\r\n                  {props.about}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            {/* <div className=\"Themes\">\r\n              <label\r\n                htmlFor=\"theme\"\r\n                style={{\r\n                  width: \"9em\",\r\n                  color: props.mode === \"light\" ? \"black\" : \"white\",\r\n                }}\r\n              >\r\n                Color Themes\r\n              </label>\r\n              <button type=\"button\" className=\"theme\" id=\"col1\"></button>\r\n              <button type=\"button\" className=\"theme\" id=\"col2\"></button>\r\n              <button type=\"button\" className=\"theme\" id=\"col3\"></button>\r\n            </div> */}\r\n            <div\r\n          className={`form-check form-switch text-${\r\n            props.mode === \"light\" ? \"dark\" : \"light\"\r\n          }`}\r\n        >\r\n          <input\r\n            className=\"form-check-input \"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            id=\"flexSwitchCheckDefault\"\r\n            aria-checked\r\n            onClick={props.toggleMode}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n            {`Enable ${props.mode === \"light\" ? \"dark\" : \"light\"} Mode`}\r\n          </label>\r\n        </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string, about: PropTypes.string };\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    // console.log(\"text is changing\")\r\n    setText(event.target.value);\r\n  };\r\n  const upper = () => {\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    // console.log(\"Changed to uppercase\" +text)\r\n    props.showAlert(\"Text converted to Upper-case\",\"success\")\r\n  };\r\n  const lower = () => {\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Text converted to lower-case\",\"success\")\r\n\r\n  };\r\n  const clear = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Text removed\",\"success\")\r\n\r\n  };\r\n  const handleExtraSpace = () => {\r\n    let newt = text.split(/[ ]+/);\r\n    setText(newt.join(\" \"));\r\n    props.showAlert(\"Extra spaces removed from the text\",\"success\")\r\n\r\n  };\r\n  const handleCopy = () => {\r\n    var copy = document.getElementById(\"myBox\");\r\n    navigator.clipboard.writeText(copy.value);\r\n    props.showAlert(\"Text is copied to the clipboard\",\"success\")\r\n\r\n  };\r\n  //   const handlePast=()=>{\r\n  //     let x=navigator.clipboard.readText\r\n  //     setText(x)\r\n  //   }\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n      >\r\n        <h1>{props.head}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            value={text}\r\n            onChange={handleChange}\r\n            cols=\"100\"\r\n            rows=\"10\"\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"# 144677\",\r\n              color: props.mode === \"light\" ? \"black\" : \"white\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={upper}\r\n          style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n          disabled={text.length===0}\r\n        >\r\n          Uppercase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={lower}\r\n          style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n          disabled={text.length===0}\r\n          >\r\n          Lowercase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={clear}\r\n          style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n          disabled={text.length===0}\r\n\r\n        >\r\n          Clear Text\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleExtraSpace}\r\n          style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n          disabled={text.length===0}\r\n\r\n        >\r\n          Remove extra space\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleCopy}\r\n          style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n          disabled={text.length===0}\r\n\r\n        >\r\n          Copy Text\r\n        </button>\r\n        {/* <button className=\"btn btn-primary mx-1 my-1\" onClick={handlePast}> Past Text</button> */}\r\n        <hr />\r\n      </div>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n      >\r\n        <h1>Text Description</h1>\r\n        <p>\r\n          <strong>\r\n            Number of words: {text.split(\" \").filter((element)=>{return element.length!==0}).length} | Number of\r\n            charachters: {text.length}\r\n          </strong>\r\n        </p>\r\n        <hr />\r\n        <h6>\r\n          Time required to read: {text.split(\" \").filter((element)=>{return element.length!==0}).length * 0.811}{\" \"}\r\n          minutes\r\n        </h6>\r\n        <hr />\r\n        <h3>Preview</h3>\r\n        <h6>\r\n          <p>{text.length > 0 ? text : \"Enter somthing to preview it here\"}</p>\r\n        </h6>\r\n        <hr />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nTextForm.defaultProps = {\r\n  head: \"Enter the text below\",\r\n};\r\nTextForm.propTypes = {\r\n  head: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  const mode = {\r\n    color: props.mode === \"light\" ? \"black\" : \"white\",\r\n    backgroundColor: props.mode === \"light\" ? \"white\" : \"#2C3639\",\r\n  };\r\n  return (\r\n    <div className=\"container\" style={mode}>\r\n      <h2>About Texomer</h2>\r\n      <p>\r\n        This is an web application which provides functionalities to transform\r\n        text and return text related information.\r\n      </p>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={mode}>\r\n        <div className=\"accordion-item\" style={mode}>\r\n          <h2 className=\"accordion-header\" id=\"headingOne\" style={mode}>\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={mode}\r\n            >\r\n              Upper\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n            style={mode}\r\n          >\r\n            <div className=\"accordion-body\" style={mode}>\r\n              Upper button converts text to upper-case.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={mode}>\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={mode}\r\n            >\r\n              Lower\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n            style={mode}\r\n          >\r\n            <div className=\"accordion-body\" style={mode}>\r\n              Lower button converts text to lower-case.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={mode}>\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={mode}\r\n            >\r\n              Clear\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n            style={mode}\r\n          >\r\n            <div className=\"accordion-body\" style={mode}>\r\n              Clear button removes the written text.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    let low = word.toLowerCase();\r\n    return low.charAt(0).toUpperCase() + low.slice(1);\r\n  };\r\n  return (\r\n    <div style={{ height: \"40px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalize(props.alert.type)}</strong> :{props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport Navbar from \"./navbar\";\nimport TextForm from \"./text-form\";\nimport About from \"./About.js\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Alert.js\";\n// import { BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const [mode, setMode] = useState(\"light\"); // it states whether mode is light mode or dark mode\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#0b3054\";\n      showAlert(\"Dark mode enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      <Navbar\n        title=\"Texormer\"\n        about=\"About\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm id=\"text-form\" mode={mode} showAlert={showAlert} />\n        <About mode={mode}/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}